" SEtup vundle
set nocompatible              " be iMproved, required
filetype off                  " required
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" default
Plugin 'L9'

" UI n stuff
Plugin 'flazz/vim-colorschemes'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
"Plugin 'ap/vim-css-color'
Plugin 'airblade/vim-gitgutter'

" auto complete
Plugin 'Shougo/neocomplete.vim'
Plugin 'ternjs/tern_for_vim'
Plugin 'fatih/vim-go'
Plugin 'mattn/emmet-vim'

" edit and format
Plugin 'matze/vim-move'
Plugin 'Chiel92/vim-autoformat'
Plugin 'scrooloose/nerdcommenter'
Plugin 'godlygeek/tabular'
Plugin 'terryma/vim-multiple-cursors'

" handy tools
Plugin 'majutsushi/tagbar'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/syntastic'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" general conf
set backspace=2           " make backspace work like all other apps
set number                " turn on the line numbers
set incsearch             " vim starts searching while typing search string
set expandtab             " tabs are spaces
set tabstop=2             " tabset two spaces
set shiftwidth=2          " tabset two space
set ff=mac                " set file format to mac
syntax enable             " syntax always on
set wildmenu              " enable tab completion
set wildmode=list:longest " configure tab completion
set t_Co=256              " set termcolors to 256
set encoding=utf8         " set standared encoding as utf8
set ruler                 " allways show the current position
set laststatus=2          " allways show the status line
set cursorline            " allways show a line where the curser is
colorscheme jellybeans    " set the color scheme
"set undodir=~/.vim/undoHist
"set undofile

" allow mouse use if supported
if has('mouse')
  set mouse=a
endif

" map double i to esc and <space> to leader
imap ii <Esc>
let mapleader = "\<Space>"

" easy jump to beg/end of line
noremap H ^
noremap L $

" copy and paste from clipboard
map <leader>y "+y
map <leader>p "+p

" leader s = syntastic
nnoremap <silent> <leader>s :SyntasticCheck<CR>

" set paste and no pase
nnoremap <silent> <leader>sp :set paste<CR>
nnoremap <silent> <leader>sn :set nopaste<CR>

" vim-autoformat
nnoremap <silent> <leader>b :Autoformat<CR>

" Vim-Airline
let g:airline_powerline_fonts = 1
let g:airline#extensions#syntastic#enabled = 1
let g:airline#extensions#branch#enabled = 1
let g:airline_theme='base16'


" setup vim-move to use Ctl key
let g:move_key_modifier  = 'C'

" Syntastic
let g:syntastic_javascript_checkers = ['eslint']

let g:syntastic_sh_shellcheck_args = "-s bash" 
let g:syntastic_bash_checkers = ['shellcheck']
let g:syntastic_sh_checkers = ['shellcheck']

let g:syntastic_error_symbol = 'âœ—'
let g:syntastic_warning_symbol = '!'

let g:syntastic_always_populate_loc_list = 0
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_wq   = 0
let g:syntastic_check_on_open = 1

"tagbar
nnoremap <silent> <leader>t :TagbarToggle<CR>


" setup neocomplete
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><C-g>     neocomplete#undo_completion()
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" emmit vim
let g:user_emmet_mode='a'    "enable all function in all mode.
let g:user_emmet_install_global = 0
let g:user_emmet_leader_key='<C-K>'
autocmd FileType html,css EmmetInstall

" go mappings
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>gd <Plug>(go-doc)
au FileType go nmap <Leader>gs <Plug>(go-def)
au FileType go nmap <Leader>r <Plug>(go-run)
au FileType go nmap <Leader>b <Plug>(go-build)
au FileType go nmap <Leader>t <Plug>(go-test)
