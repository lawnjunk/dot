# ___ PLUGINS ______________________________________
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
run '~/.tmux/plugins/tpm/tpm'

# ___ TMUX HOTKEY ______________________________________

# set ^f to be the new cmd hotkey
unbind C-b
set -g prefix C-f

# ___ CONVIENENCE ______________________________________

# bind r to reload source file
bind r source-file ~/.tmux.conf

# bind prefix ctrl-o to clear screen
bind l send-keys 'C-l'
bind -n C-o send-keys 'C-l'

# ___ MOUSE ______________________________________
# set mouse mode on by default
set-option -g mouse on

# bind <C-f> m turn mouse mode on 
bind m \
	set-option -g mouse on \;\
	display 'Mouse: ON'

# bind <C-f> M turn mouse mode off
bind M \
	set-option -g mouse off \;\
	display 'Mouse: OFF'

# ___ NAVIGATION ______________________________________

# prev and next window bindings
bind-key -n C-n next-window
bind-key -n C-b previous-window

# move pane to window
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# remap rotate window to <C-f> i
unbind C-o
unbind i
bind-key -n C-i rotate-window

#bind-key % to hotdog split window and remain in $PWD
bind % split-window -h -c "#{pane_current_path}"

#bind-key " to hamberger split window and remain in $PWD
bind '"' split-window -v -c "#{pane_current_path}"

# new windows open in $PWD
bind c new-window -c "#{pane_current_path}"

#bind o previos pane p next pane
bind-key -n ˙ swap-pane -D
bind-key -n ¬ swap-pane -U

# map vim nav keys CAPS to resize panes
bind-key H resize-pane -L 10
bind-key L resize-pane -R 10
bind-key K resize-pane -U 10
bind-key J resize-pane -D 10
unbind h
unbind j
unbind k 
unbind l


# ___ VIM ______________________________________
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# ___ COPY ______________________________________
set-window-option -g mode-keys vi
bind-key p paste-buffer                # paste; default ]
bind-key o copy-mode                   # enter copy mode; default [
bind-key -t vi-copy v begin-selection  # begin visual mode
bind-key -t vi-copy V select-line      # visual line
bind-key -t vi-copy r rectangle-toggle # visual block toggle

# ___ DISPLAY ______________________________________

# setup 256 colors
set -g default-terminal "screen-256color"

#setup color scheme
set-option -g status-bg colour216
set-option -g status-fg colour0
set -g pane-active-border-fg colour39
set -g pane-border-fg colour15
set -g window-status-format  '#I:#W#F'
set -g window-status-style 'fg=colour16'
set -g window-status-current-format  ' (#I) #W#F '
set -g window-status-current-style 'bg=colour16,fg=colour216,bold'

set -g status-left ' ' 
set -g status-right '#[bg=#f3f3f3]#[fg=#000000] #(local_ip.sh) #[bg=#bbbbbb]#[fg=#000000] #(hostname | sed -e "s/.local//g") #[bg=#4e4e4e]#[fg=#ffffff]#(date +" %H:%M ") #[bg=#000000]#[fg=#ff7a7a] #(battery_status.sh) '

